stages:
  - Precheck
  - Build
  - Test
  - Report
  - deploy
  - Notify

prechecks:
  stage: Build
  script:
    - cloud_subject=$(echo $scope|awk -F"," '{print $1}')
    - echo "$cloud_subject"
    #- export xvfb_pid=$(ps -ef|grep -i xvfb |grep -v grep |awk '{print $2}');
    #- if [ -z "$xvfb_pid" ]; then nohup  Xvfb -screen 0 1024x768x24 :99 & >/dev/null & disown ; else echo "Xvfb is already running....."; fi
    - echo "Cypress test execution started  for $scope " | /usr/bin/mailx  -s "Cypress test reports-$cloud_subject" -S smtp=smtp://shcpostfix -S from="cypress@t-systems.com" sidhesh.kumar@t-systems.com

  except:
    - stagedev
  tags:
    - dev
  only:
    # - feature_cypress_screenshots
    - schedules

execute tests:
  stage: Test
  #uncomment below line for parallel execution
  #parallel: 2
  script:
    - chmod +x ./scripts/day2generic.sh
    - sh -x ./scripts/day2generic.sh $scope $day2

  timeout: 10 hours
  artifacts:
    name: screenshots
    when: always
    paths:
      - node_modules
      - cypress/reports
      - cypress/screenshots

  tags:
    - dev
  only:
    #  - feature_cypress_screenshots
    - schedules

create report:
  stage: Report
  script:
    - ls -larth cypress/reports
    - npm run create:html:report
    - ls -larth TestReport
    - mv TestReport/*.html TestReport/index.html
    - ls -larth TestReport
    - rm -rf public/*
    - mkdir -p public/${CI_PIPELINE_ID}
    - cp TestReport/* public/${CI_PIPELINE_ID} -R
    - if [  -d  "cypress/screenshots" ]; then cp -r cypress/screenshots  public/${CI_PIPELINE_ID}/screenshots; fi
    - ls -larth public
    - ls -larth public/${CI_PIPELINE_ID}
    - echo JID_REPORT=$CI_JOB_ID >> report.env

  artifacts:
    when: always
    paths:
      - public
    # use reports for passing env variables to other jobs in different stage
    reports:
      dotenv: report.env

  except:
    - merge_requests
    - master

  tags:
    - dev
  only:
    # - feature_cypress_screenshots
    - schedules

pages:
  stage: deploy
  script:
    - echo " check report on this "
  artifacts:
    name: '$CI_PIPELINE_ID'
    paths:
      - public
  only:
    #- feature_cypress_screenshots
    - schedules
  tags:
    - dev

notifications:
  stage: Notify
  script:
    - cloud_subject=$(echo $scope|awk -F"," '{print $1}')
    - JID=$JID_REPORT
    - JID_SS=$(($CI_JOB_ID-4))
    - echo  -e "This is an autogenerated mail\nCypress detailed report==>https://saphybridcloud.pages.devops.telekom.de/-/frontend/-/jobs/${JID}/artifacts/public/${CI_PIPELINE_ID}/index.html"| /usr/bin/mailx  -s "cypress build test reports-$cloud_subject" -S smtp=smtp://shcpostfix -S from="cypress@.com" sidhesh.kumar@t-systems.com PRASANNAKUMAR.KAPATE@t-systems.com Patrik.Havrila@t-systems.com erik.sabol@t-systems.com Stefan.Beer@t-systems.com Peter.Mundt@t-systems.com Hannes.Lange@t-systems.com RUPIKA.SAHARIYA@t-systems.com SOUMYA.ROY@t-systems.com pjochmann@t-systems.com,parth.namdev@t-systems.com
    #- echo  -e "This is an autogenerated mail\nCypress detailed report==>https://saphybridcloud.pages.devops.telekom.de/-/frontend/-/jobs/${JID}/artifacts/public/${CI_PIPELINE_ID}/index.html\nFailed screenshots==>https://gitlab.devops.telekom.de/saphybridcloud/frontend/-/jobs/${JID_SS}/artifacts/browse/cypress/screenshots/src/components/spec_temp"| /usr/bin/mailx  -s "cypress build test reports-$cloud_subject" -S smtp=smtp://shcpostfix -S from="cypress@t-systems.com" sidhesh.kumar@t-systems.com
  needs:
    - job: create report
      artifacts: true
  except:
    - merge_requests
    - masters
  tags:
    - dev
  only:
    # - feature_cypress_screenshots
    - schedules
